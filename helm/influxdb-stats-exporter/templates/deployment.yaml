apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "influxdb-stats-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "influxdb-stats-exporter.name" . }}
    helm.sh/chart: {{ include "influxdb-stats-exporter.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "influxdb-stats-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "influxdb-stats-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.imagePullsecret }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - '--log.level={{ .Values.log.level }}'
            - '--influx.url={{ .Values.influx.url }}'
            - '--web.listen-address={{ .Values.web.listenAddress }}'
            - '--web.metrics-path={{ .Values.web.metricsPath }}'
          env:
          {{- if .Values.influx.auth.user }}
            - name: INFLUX_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "influxdb-stats-exporter.fullname" . }}-secret
                  key: user
          {{- end }}
          {{- if .Values.influx.auth.password }}
            - name: INFLUX_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "influxdb-stats-exporter.fullname" . }}-secret
                  key: password
          {{- end }}
          ports:
            - name: http
              containerPort: {{ (split ":" .Values.web.listenAddress)._1 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.web.metricsPath }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.web.metricsPath }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
